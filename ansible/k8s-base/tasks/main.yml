# Docker prereqs
- name: Install required packages
  when: ansible_facts['os_family'] == "RedHat"
  become: yes
  package:
    name:
      - device-mapper-persistent-data
      - lvm2
    state: present
- name: Deletes daemon.json
  become: yes
  file:
    path: /etc/docker/daemon.json
    state: absent
- name: Writes daemon.json
  become: yes
  blockinfile:
    path: /etc/docker/daemon.json
    create: yes
    marker: ""
    block: |
      {
          "exec-opts": [
              "native.cgroupdriver=systemd"
          ],
          "log-driver": "json-file",
          "log-opts": {
              "max-size": "100m"
          },
          "storage-driver": "overlay2",
          "storage-opts": [
              "overlay2.override_kernel_check=true"
          ]
      }
- name: Restart Docker
  become: yes
  systemd:
    name: docker
    state: restarted
    enabled: yes
    daemon_reload: yes
- name: Add Kubernetes repo
  when: ansible_facts['os_family'] == "RedHat"
  become: yes
  yum_repository:
    name: kubernetes
    description: kubernetes
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    enabled: yes
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey:
      - https://packages.cloud.google.com/yum/doc/yum-key.gpg
      - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    exclude: kube*
    
- name: Turn off SELinux
  when: ansible_facts['os_family'] == "RedHat"
  become: yes
  selinux:
    state: disabled
- name: Install Kubernetes packages
  when: ansible_facts['os_family'] == "RedHat"
  become: yes
  yum:
    name:
      - kubelet
      - kubeadm
      - kubectl
    disable_excludes: kubernetes
- name: Start Kubernetes
  when: ansible_facts['os_family'] == "RedHat"
  become: yes
  systemd:
    name: kubelet
    state: started
    enabled: yes
- name: Set sysctl for ipv4
  when: ansible_facts['os_family'] == "RedHat"
  become: yes
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present
- name: Set sysctl for ipv6
  when: ansible_facts['os_family'] == "RedHat"
  become: yes
  sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: 1
    state: present
- name: Load module br_netfilter
  when: ansible_facts['os_family'] == "RedHat"
  become: yes
  modprobe:
    name: br_netfilter
    state: present

- name: Add Kubernetes GPG key
  when: ansible_facts['os_family'] == "Debian"
  become: yes
  shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
  args:
    warn: no
- name: Add Kubernetes repo
  when: ansible_facts['os_family'] == "Debian"
  become: yes
  shell: add-apt-repository "deb https://apt.kubernetes.io/ kubernetes-xenial main"
- name: Install Kubernetes packages
  when: ansible_facts['os_family'] == "Debian"
  become: yes
  apt:
    name:
      - kubelet=1.15.6-00
      - kubeadm=1.15.6-00
      - kubectl=1.15.6-00
    state: present
    update_cache: yes