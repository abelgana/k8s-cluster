apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: datadog-agent
spec:
  template:
    metadata:
      labels:
        app: datadog-agent
      annotations:
        sidecar.istio.io/inject: "false"
      name: datadog-agent
    spec:
      serviceAccountName: datadog-agent
      containers:
      - name: datadog-agent
        image: datadog/agent:latest-jmx
        imagePullPolicy: Always
        ports:
          - containerPort: 8125
            hostPort: 8125
            name: dogstatsdport
            protocol: UDP
          - containerPort: 8126
            hostPort: 8126
            name: traceport
            protocol: TCP
        env:
          - name: REDEPLOY
            value: "foo"
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: dd
                key: dd_api_key
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: dd
                key: auth_token
          - name: KUBERNETES
            value: "true"
          - name: DD_CLUSTER_AGENT_ENABLED
            value: "true"
          - name: DD_EXTRA_CONFIG_PROVIDERS
            value: "clusterchecks"
          - name: DD_SITE
            # Set DD_SITE to datadoghq.eu to send your Agent data to the Datadog EU site 
            value: "datadoghq.com"
          # https://docs.datadoghq.com/agent/kubernetes/legacy/#pagetitle
          - name: DD_KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          # https://docs.datadoghq.com/integrations/faq/why-is-the-kubernetes-check-failing-with-a-connecttimeout-error-to-port-10250/
          - name: KUBERNETES_KUBELET_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: DD_APM_ENABLED
            value: "true"
          - name: DD_APM_NON_LOCAL_TRAFFIC
            value: "true"
          - name: DD_DOGSTATSD_NON_LOCAL_TRAFFIC
            value: "true"
          - name: DD_LOGS_ENABLED
            value: "true"
          - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
            value: "true"
          # https://github.com/DataDog/integrations-core/issues/2582
          - name:  DD_KUBELET_TLS_VERIFY
            value: "true"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "256m"
        volumeMounts:
          - name: dockersocket
            mountPath: /var/run/docker.sock
          - name: procdir
            mountPath: /host/proc
            readOnly: true
          - name: cgroups
            mountPath: /host/sys/fs/cgroup
            readOnly: true
          - name: pointerdir
            mountPath: /opt/datadog-agent/run
        livenessProbe:
          exec:
            command:
            - ./probe.sh
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
        - name: dockersocket
          hostPath:
            path: /var/run/docker.sock
        - name: procdir
          hostPath:
            path: /proc
        - name: cgroups
          hostPath:
            path: /sys/fs/cgroup
        - name: pointerdir
          hostPath:
            path: /opt/datadog-agent/run
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: datadog-agent
  name: datadog-agent
spec:
  clusterIP: None
  ports:
  - name: dogstatsdport
    port: 8125
    protocol: UDP
    targetPort: 8125
  - name: traceport
    port: 8126
    protocol: TCP
    targetPort: 8126
  selector:
    app: datadog-agent
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: datadog-cluster-agent
  namespace: default
spec:
  template:
    metadata:
      labels:
        app: datadog-cluster-agent
      name: datadog-agent
      annotations:
        sidecar.istio.io/inject: "false"
        ad.datadoghq.com/service.check_names: '["istio"]'
        ad.datadoghq.com/service.init_configs: '[{}]'
        ad.datadoghq.com/service.instances: |
          [
            {
              "istio_mesh_endpoint": "http://istio-telemetry.istio-system:42422/metrics",
              "mixer_endpoint": "http://istio-telemetry.istio-system:15014/metrics",
              "galley_endpoint": "http://istio-galley.istio-system:15014/metrics",
              "pilot_endpoint": "http://istio-pilot.istio-system:15014/metrics",
              "citadel_endpoint": "http://istio-citadel.istio-system:15014/metrics",
              "send_histograms_buckets": true
            }
          ]
    spec:
      serviceAccountName: dca
      containers:
        - name: datadog-cluster-agent
          image: datadog/cluster-agent
          imagePullPolicy: Always
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          env:
            - name: DD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: dd
                  key: dd_api_key
            - name: DD_CLUSTER_AGENT_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: dd
                  key: auth_token
            - name: DD_CLUSTER_CHECKS_ENABLED
              value: "true"
            - name: DD_CLUSTER_NAME
              value: "alexf-k8s"
            - name: DD_COLLECT_KUBERNETES_EVENTS
              value: "true"
            - name: DD_LEADER_ELECTION
              value: "true"
            - name: DD_EXTERNAL_METRICS_PROVIDER_ENABLED
              value: "false"
            - name: DD_EXTRA_CONFIG_PROVIDERS
              value: "kube_services"
            - name: DD_EXTRA_LISTENERS
              value: "kube_services"
          volumeMounts:
            - name: dd-conf
              mountPath: /conf.d/istio.d/conf.yaml
              subPath: istio.yaml

      volumes:
        - name: dd-conf
          configMap:
            name: dd-conf

---
apiVersion: v1
kind: Service
metadata:
  name: datadog-cluster-agent
  labels:
    app: datadog-cluster-agent
spec:
  ports:
  - port: 5005 # Has to be the same as the one exposed in the DCA. Default is 5005.
    protocol: TCP
  selector:
    app: datadog-cluster-agent